// Code generated by go-bindata.
// sources:
// config.yaml
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _configYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x5b\xdd\x8f\x1b\xb9\x91\x7f\x9f\xbf\xa2\x22\x9f\x71\x36\x30\xd1\xce\xf8\xb2\x49\x20\x38\x5e\xcc\xda\xbe\x5b\x1f\xec\xdd\x85\xed\x0d\x90\xa7\x06\xd5\x5d\xad\x66\xa6\x9b\xec\xf0\x43\x1a\xe5\xaf\x3f\x54\xf1\xa3\x5b\x6a\x69\x24\x8d\x17\x38\xbf\xec\x8a\x5d\xac\x22\xeb\x8b\xbf\x2a\x72\x9e\xc1\x27\xdf\x2d\x5b\x7c\xf7\xbf\x57\xcf\xe0\xc7\x2d\x7c\x12\xce\x35\x12\x3d\xfc\x8f\x91\xb8\x42\x73\xf5\x0c\xde\xea\x7e\x6b\xe4\xaa\x71\xf0\xa2\x7c\x09\xaf\x6e\x6e\xff\x3c\xa1\x82\x17\x9f\x3e\x7c\x85\x8f\xb2\x44\x65\xf1\xe5\xd5\x33\x28\xb5\xaa\xe5\x6a\xbe\x15\x5d\x7b\x75\x25\x7a\x59\xdc\xe3\xd6\x2e\xae\xae\x00\x00\x9e\xc1\x3f\xb4\xff\xea\x97\x08\x77\xbf\x7e\x80\x7b\xdc\xce\x79\x78\xab\xbd\xf3\x4b\x5c\xc0\x6c\x96\xe8\xbe\x68\xaf\xaa\xb7\xad\xf6\xd5\x2e\xe9\x33\xf8\xf9\x97\xaf\xef\x17\xf0\xb5\xc9\x3c\x40\x5a\xe2\x60\xa0\x6c\x25\x2a\x07\x1f\xde\x05\x52\x4b\x2c\x4a\x62\x11\x18\x5f\x55\x58\x0b\xdf\xba\x61\x31\xef\xc2\x00\x94\xba\xeb\x68\xa6\xd3\xb0\x44\x10\x7d\xdf\x4a\xac\xf8\x97\x76\xbb\x62\x3f\xd4\x24\x0a\x2a\x0d\x4a\x3b\xd8\x08\xe5\x40\xe4\xe9\xcb\x2d\x44\x11\xd7\x60\x91\xd9\x61\xd7\xbb\x2d\x58\x67\xa4\x5a\xc1\x8b\xd9\xec\x65\x60\x17\x67\x2c\x60\xf6\x13\xb6\xad\xfe\x03\x7c\x00\xd1\x81\x60\x79\xf0\x75\xdb\x23\xfc\xa1\xc1\xb6\x87\x5a\x1b\x10\xd0\x4a\xeb\x40\xd7\x3c\x4b\xa8\xca\xce\x67\x93\x0d\x34\x42\x29\x6c\x99\xde\x35\x48\x7c\x58\xba\x72\x68\xc0\xf7\x5a\x91\x55\x14\x96\x4e\x6a\x75\x70\x43\x1b\x69\x9b\xfd\xd9\x71\x0a\xfd\x2f\x8d\x1a\xad\xb3\xa0\x93\xfb\x0b\x64\x63\x83\xbe\x0d\x8b\xa7\x49\xde\x22\xfd\xa7\x6f\xc5\x16\x84\xaf\xa4\x86\x5a\xb6\x68\xe7\x6c\x54\xb7\xd1\x60\x7d\xdf\x6b\xe3\xb0\x82\xb2\xd1\xb2\x44\x0b\xc2\x20\xcc\xea\xba\xeb\x71\x35\x03\x62\x33\x13\xeb\x52\xab\xf5\x2c\xc8\x23\x56\x68\x8a\xa8\xa0\x45\x26\xbd\xba\xba\xfa\x97\x47\x8f\xd9\xe2\x9f\x85\x93\xb4\x1d\xe1\xa0\xf3\xd6\x91\xb9\x3b\x74\xa0\x0d\xe0\x43\x89\x58\x05\xb3\x3b\x23\x57\xe4\xda\x02\x9c\x11\xe5\x3d\xd8\x7b\xd9\x07\x41\xfc\xbb\xa0\xdf\x85\x21\x56\x0b\xb8\x99\x7f\xff\x54\xe6\xb4\x6a\xb6\xed\xc0\x3f\x0d\x1d\x13\xf1\x49\x3c\xc8\xce\x77\x71\x5d\x95\x67\x0a\x05\x52\x81\xc5\x52\x93\x6f\xc0\x97\x60\x99\x1b\x36\xa7\x57\x06\xc9\x3a\x25\x29\x33\x91\x07\x51\x9d\x78\x28\xc2\x76\xd2\xf8\x02\x6e\x0e\xca\xb1\xd0\xa3\xc9\x4b\x7b\x4c\x42\xa2\xb1\x7b\x22\x6c\xd1\xa3\x29\xd2\xd7\x05\x7c\x9f\x05\x7d\xb0\x60\x1b\x5f\xd7\x2d\x39\x10\x2a\xb1\x6c\xb1\x82\x4d\x83\x2a\x7b\xa2\x75\xc2\x38\xfb\x03\xd3\x0b\xef\x74\x27\x9c\x2c\x8b\x30\x09\x0b\x5a\x75\x2d\x5a\x8b\x89\xe1\x9d\x52\xda\xab\x12\xa3\x8a\xa4\xaa\xb5\xe9\x82\x96\x84\x0b\x4c\x71\x25\x95\x22\x79\xba\x8e\xfe\x47\x2b\x5b\x8a\xf2\x3e\x4a\x89\x2c\x0a\x85\x9b\xb8\xfe\x05\x38\xe3\xb3\x8c\x8f\x5a\xf7\x21\x59\x8c\x38\xb1\xa3\x85\xa5\xd7\x52\x49\xdb\x60\x15\xb4\xd0\x6a\xdd\x17\x31\x31\xe4\xc5\x5e\x0d\x01\x99\x9d\xf3\xae\xaa\x0c\x5a\x1b\x76\xdd\x68\xdf\x56\x20\x9c\xa3\x10\xdb\x0d\xc7\xc0\x56\x04\xea\x05\xcc\x6e\x5f\xfd\x65\x7e\x33\xbf\x99\xdf\xe6\x60\xfb\x55\x1b\x77\x26\x1b\x0a\xb4\x05\xcc\xfe\xfc\xa7\xbf\xfc\xd7\x5f\x87\xf9\xc2\xda\x8d\x36\x15\x5b\x38\xad\x54\xad\x68\xbe\x45\xb3\x46\x33\x49\x22\x4a\x43\x1f\x27\x9d\x4a\x0e\x89\x6e\x9c\x1d\x7e\xb3\x68\x94\xe8\x90\x05\xa6\x63\x29\x90\xfb\xf8\x69\x01\xb3\xf4\x21\x4f\xfb\x6f\xd9\x62\x2f\x5c\x13\xb3\x8a\x81\xfe\xf6\x15\x27\x93\x90\x39\xbd\x6b\x50\x39\x59\x0a\x5e\xbc\xb0\x20\xc0\xe0\x4a\x5a\x87\x06\x2b\x9e\x70\x70\x1f\x89\x87\xb4\xa0\x38\x6c\x4f\xed\x88\x38\x15\xfd\xed\xab\x9d\x03\x2c\x68\x3e\x79\x71\xb2\x80\xa0\x60\xb5\x58\x7a\x83\xa3\x9c\xfc\x43\x76\xde\x43\x5f\xa1\xd2\x68\xf9\xc0\x59\xa3\x91\xf5\x96\x99\x96\x68\x9c\xac\x69\x6f\x48\xde\x47\x43\xc1\x34\xb4\xf5\xc8\xae\xd4\xca\xd2\x6e\x55\xb9\x9d\xc3\x07\x47\x1b\x5a\xa2\xe5\x9d\xb4\x28\xd6\x08\xae\x91\x16\xb4\xba\x86\xa5\x77\x50\x49\x4b\xe1\x07\xd2\x81\x0c\xa7\x02\x65\xdd\x46\xac\xa5\x5a\x45\x86\xd2\x5a\x8f\x76\xcf\x23\x44\x12\x4c\x2a\x37\x08\xc6\x87\x98\xe8\x7c\xeb\x64\x4f\x0c\x95\x75\x42\x51\x1a\xd7\xf5\x9e\x71\xd3\x6e\xf7\x82\x78\x6c\xd7\xf1\x46\xc9\x2c\x87\x4c\xb6\x4f\x73\xbe\xe9\x68\xe6\xd8\x6c\xc7\x24\x13\xce\x38\x26\x3d\x62\x90\xf3\x04\xde\xe3\x76\x2c\xef\xae\x2c\x29\xe4\x9d\xbe\x47\x45\xff\x01\xa9\xa4\x93\xa2\x95\xff\xc6\xec\x3b\x1b\xe9\x1a\x62\xdb\x0b\x23\x28\xcb\x2e\xb7\x01\x0a\xd8\x43\x8b\x11\x3b\x0c\xc9\x1e\xe7\xad\x2b\xcc\x2b\xc2\xbc\xc7\x1c\x39\xa5\x60\xd1\xb6\xdb\x71\x62\x31\xe8\xcc\x76\xec\xb5\x63\xd7\x10\x35\x21\x91\x4a\xda\xc1\x75\x82\xcf\xf3\xac\x22\x26\xfe\xdd\x2c\xfb\x93\xde\x40\x27\xd4\x16\x9c\xec\xd0\xa6\x54\xb6\x1f\x50\x2c\x79\x0f\xaa\x04\xa1\x63\x01\x91\xda\x2e\xe0\xf6\x66\xc2\x3f\x1e\x9d\xfb\x12\x36\x82\x22\x41\xfd\x71\x89\x6e\x83\x38\x86\x50\x71\xaf\x89\xe9\x58\x90\x24\xc8\xb5\x16\xed\x02\xbe\xa7\x24\x2f\xca\x66\x00\x1f\x6f\xe9\x17\x58\xad\x56\x96\x92\x91\x6b\x70\xcb\x06\xaa\xf4\x46\xb5\x5a\x54\x58\x05\x4e\x59\x1b\x3b\x31\x91\x8f\x64\xed\x44\x1b\xbc\xdc\x92\x97\x10\x30\x64\xc6\x95\x34\x58\x3a\x6d\xb6\x04\x07\x3e\xc9\x1f\xf3\x19\x4c\xd3\x0a\xa2\x5d\xc0\xf7\xb7\xaf\x72\x8e\x47\x23\x75\xc5\xb9\x43\x76\x18\x60\x4b\xd4\x00\xb6\xa2\xb7\x74\x50\xd6\xda\x20\x19\x51\xab\x15\x79\x78\xd9\xa2\xa0\xcc\x59\x1b\xdd\x85\x24\x44\x82\xaf\x49\x5e\xa3\xbd\x89\xfe\x88\x0f\xbd\x34\x58\x10\xd7\x05\xbc\xfa\xd3\x11\x79\x49\xab\x28\xca\x06\xca\x06\xcb\xfb\x94\xc6\xc2\x6e\x6a\x86\x4d\xc4\xa9\x02\xe9\xb0\xb3\x2c\xa6\x93\xca\x3b\xb4\x09\x65\x62\x79\xbf\xab\xf1\x08\x8b\xb3\x26\xe8\xc0\x72\xb4\x09\x66\x1a\x39\xcd\xe1\xbd\x5a\x4b\xa3\x15\xa3\xf6\xb5\x30\x92\xf4\x1d\x82\x85\x33\x60\xa8\x03\xbc\xc5\x0a\x1a\x34\x31\xe6\xb3\x7a\x17\x30\xfb\x8f\x9f\x7e\xf9\xf4\xfe\xbb\x39\x33\xfd\xae\xe3\x8c\x56\xfd\x93\xd0\xe6\x5a\xb7\xbe\xc3\x49\x81\x11\x86\x23\x9f\x84\x04\x6e\xe6\xaf\x06\x40\xb1\xa1\xbc\x1c\xc8\x40\xb4\xad\xde\x0c\xe8\x81\x3e\x11\xf5\xcd\x6d\xf6\x5c\xb9\x6a\x8e\xd1\x37\xe1\x1b\x4d\xf8\xeb\xd5\xd5\x95\xa8\x3a\xa9\x86\x8a\xe7\x3d\xbb\x16\x84\xd1\x1f\xf6\xd3\x07\x1f\x07\xd2\xa6\x4c\xc1\xee\x77\x0d\x14\x22\x11\x59\x43\x29\x14\xa9\x06\x1f\xb0\xf4\x31\x15\xd1\xe7\xe1\x28\x3d\x18\xc9\x1f\x63\x01\xc3\x62\x81\x0e\xf3\xfd\xd4\xc5\x67\x13\xc5\x31\xd5\x45\x0c\x94\x9b\x88\xd6\x98\x9a\x4c\xcf\x8b\x63\xb8\xcc\x87\xcc\x70\x8e\x6b\xc6\x8a\x91\x5f\xcc\x37\x36\xe2\x70\xd9\xf5\x9a\xc8\x2c\xad\x9c\x4e\xd0\xb8\xf2\xb8\x94\x5c\x51\xf1\x6c\x16\xb5\xe0\xff\xa5\x7f\x7f\x84\xd9\x17\xdf\xa3\x21\x6c\x32\x63\xc4\x16\x88\x87\x78\x6e\x84\x11\x25\x97\x58\x36\x60\xfb\x0a\xad\x5c\x29\x3a\x2f\x12\x71\x88\x15\x45\x18\xb4\x05\x87\x0f\x0e\x3a\xb4\x56\xac\xf6\x35\xf0\x8b\x6a\xb7\xa0\x15\x52\xe9\x14\x99\xbe\xa0\xed\xd7\xd2\x58\xf7\x92\xb4\x43\x32\x22\x80\x32\x58\xcb\x87\x05\xcc\xfe\x10\x93\x34\x09\xd3\xaa\x48\x9c\x87\x2d\x28\x9d\xf0\x37\x1a\xa3\xcd\x02\x66\x5f\xc9\xa1\xc3\xb1\xa0\x13\xba\x97\x01\x6c\x33\x80\x9d\xcf\xf2\x64\xf2\x6e\xa9\x56\x45\xc4\x05\x55\xe6\xf1\x36\x7c\xe0\x8c\xe0\x8d\x41\xe5\xda\x6d\x42\x0f\xd5\x50\x9c\xfe\x88\xad\xde\x10\xd1\x50\xc1\x72\x78\x27\xcd\x0c\x55\xde\x72\x3b\xc0\x02\x78\xcf\x09\x21\xfa\x5b\x23\x6c\xe4\xe6\x1a\x83\x18\x9b\x0b\xde\xb0\x17\xeb\x9e\x92\x71\xdc\xee\x33\x10\xad\x14\x16\xed\x02\xee\xb2\xbc\xe0\x3c\xec\x09\xd1\x73\x93\xa5\x92\x1f\x8c\x56\x34\xcf\x20\xa7\x60\xef\x08\x3e\x0c\x7f\x03\x4d\xb6\x09\x21\xc3\x6c\x0e\xcc\xbd\x0e\xc1\x02\x7f\xa3\x70\x60\x33\x1e\xa6\x4b\x32\x2a\xb4\xa5\x91\x7d\xa8\xba\xde\x0d\x3f\x28\x03\x6f\x54\xae\xc4\x93\x1a\x72\x41\xc4\x5d\x81\x34\x2a\x6d\x0e\xc4\xc4\x37\xbb\x00\xfc\x5d\x18\xa9\xbd\xcd\x23\xb1\x2e\x15\x5b\xd2\x82\xa5\xc4\xc7\x78\x78\xec\x92\xa3\xbc\x1e\x57\x4b\xb8\xbc\xf6\xb1\xaf\x60\x84\xb2\x2d\x43\xe9\x28\x6c\xf8\x17\xd0\x04\xe3\x17\xed\x1a\x34\xd0\x0a\xb5\xf2\xec\xe5\xf0\x4e\x93\x8b\x83\xc1\x4e\xaf\x71\xa0\xa4\xd5\x70\xfd\xc4\xf0\x06\x66\xcf\x67\xf0\xc2\xfa\xb2\xa1\x65\xcd\x9e\xdb\xd9\x35\xcc\x9e\x57\xb3\x6b\x40\x57\xce\x5f\x4e\x04\xa6\xe3\xd3\xfa\xa5\x75\xd2\x71\x2e\x62\x3e\xc6\x2b\x3e\x5e\x2a\xe1\xc4\x1c\x3e\x93\x50\x86\xa9\x0d\xda\x41\xf8\x46\xb6\x2d\x94\x82\xfb\x10\x43\xbf\xa3\x93\x76\x89\x8d\x58\x63\xae\xaf\x86\x40\x4a\xbe\x75\x35\x5a\x03\x25\x08\x51\x55\xb3\xc9\xd8\x30\x32\xb8\x52\x38\xca\xd3\xf8\x8e\xf9\x67\x77\x55\x65\x73\xaf\x41\x0f\x95\x76\xb0\x87\x80\x0e\x2b\x29\xc0\x4a\x87\x09\xe0\xec\x87\xea\x34\xf2\x63\xf4\x7b\xd3\xe6\xb0\xbd\x83\xdf\x3e\x7f\xcc\x9d\x09\x8a\x3e\x6e\x73\xb1\xda\x88\xa9\xa8\xaa\x6c\xf8\xd9\x3e\xa3\xb5\x68\x65\xb5\x9f\x4c\x7e\xd6\xc0\xe3\x29\x91\x6c\x28\xb7\xd4\xda\xab\x11\xd7\xde\xe8\xb5\xa4\x8c\xfe\xdb\xe7\x8f\x2f\xec\xcb\x3d\xce\x91\xa1\xd3\xba\x68\xb5\x5a\x65\xce\xff\xd0\xde\x84\x8f\x2f\xec\xcb\xc0\x17\x25\x7b\x96\xd3\x1a\x88\x94\xab\x0d\x05\x3c\x01\x74\xc9\x89\x88\x02\x85\x70\x51\x6f\x34\x81\xd9\x68\xf8\x6e\x0e\x3f\xeb\x81\x19\x59\x18\x96\x04\x3d\x44\x55\xe1\xfe\x56\xb5\xc2\xd8\x15\xe1\xaf\x0b\x98\xbd\x5e\xbe\x79\x6e\x5f\x7f\xb7\x7c\x13\xe8\xe1\xf5\xf2\xcd\x2d\xff\x0c\xf6\x1a\x5b\x64\xf1\x7a\x69\xde\xbc\x96\x4c\x2f\xdf\x04\xf3\x3d\xb7\xbb\x02\x08\x71\x26\x3d\x3e\x22\xe2\x79\x35\xc8\xb0\xc7\xcc\xce\xb6\xf1\x5d\xb1\xa7\x45\xe6\x68\xde\x4c\xb8\x94\x0c\xee\xe8\x14\x5c\x62\x94\x54\x79\xf6\xa9\xa8\x45\x03\x4b\xcc\x61\x11\xb0\x69\x52\x77\x4a\xeb\xa2\xaa\x14\x3e\xb8\xb3\x22\x83\x08\xa7\xd1\xa1\x0e\x85\x07\xa3\x85\x6f\x8e\x8e\x90\x15\x80\xe4\x32\xd2\x3b\x76\xb2\x3d\x4b\xdb\xa0\xe3\x20\xcc\xc9\x69\xb2\xc2\x5a\x2a\x0c\x9d\x0f\x51\x55\xf3\x78\xc2\x12\xd2\x63\x08\x7d\x72\xe3\x99\x74\xb2\xf5\xd2\x5e\xb8\xf5\x5f\xbc\xeb\xbd\x0b\x0b\xdc\x01\xfc\x03\x4c\x0e\x50\x9f\x0a\xf6\x72\x38\x95\x23\x08\x3b\x99\x20\xe2\xe9\x1d\x6b\x03\xc2\x06\x69\xe8\x90\x24\xcb\x7e\x39\x7f\xb5\x26\x89\xe4\x57\xc9\x27\xe2\x1c\xb6\xd0\x19\xfa\x19\x51\x4f\x55\x14\x3e\x52\xc1\x71\xec\xdb\xa5\xd9\x35\x29\x71\xa7\x13\xb8\xd4\x3e\xc0\xcb\xb4\xdf\xd4\x2d\x1c\xfc\x85\x74\x4a\x27\x39\x3e\x70\x43\xf3\x5c\x5d\x06\x2d\xec\x2a\x33\x32\xb7\x90\x73\xc3\x75\x8c\xbf\xe5\x16\x72\xf0\x27\x75\xd6\xda\x94\x68\xef\x65\x7f\x5a\x97\x99\x74\xa2\xac\xfa\x52\x5f\xfb\xd0\x71\x20\x39\x6c\xb7\xdc\x8f\xb6\x53\xf5\x9c\xd4\xc1\xd0\x1d\xef\x39\xaf\x4d\x75\xd0\x08\x1b\x72\x2f\xad\x5c\x2e\xa3\xac\xfe\x94\x26\x72\xe7\xf8\x7c\x8d\xa4\x29\x07\x34\xd3\xff\xae\xaa\xc9\x7d\xf1\x33\x8e\xe3\xdc\xde\x1f\xc1\xf1\xa9\x97\x50\x86\xee\x85\x09\x25\xd3\x21\xfe\xb0\x7f\x53\x30\x55\x77\xce\x92\x97\x69\x9c\xf0\xe5\x69\x25\x13\xd5\x44\xaf\xcd\x53\x03\x73\x28\xec\x76\xef\xb8\x1e\xd7\x66\x22\x2c\x1a\x14\x15\x9a\xe1\xcc\x7b\x9b\xca\x34\xda\x17\x8d\xed\xae\x94\x17\x56\x1c\x9d\x7d\xc7\x75\xe1\x01\x1e\xcc\xe4\x9f\x5a\xaa\xee\x8c\x33\x20\xd0\x4d\x54\x44\xc3\x17\xfa\xde\x27\xbd\x46\x9b\xab\x23\x90\xca\xe9\x78\xd9\x19\x0d\x9d\xae\xfe\x64\x1d\xfc\xa6\x15\x5b\x6e\x76\xf3\xbd\x86\xd3\x60\x75\x87\x9c\xc6\x5a\x7b\x1a\x31\x32\x78\xb7\x85\x30\x58\xb4\xdc\x38\x96\x23\x4c\x46\x75\x30\x17\x8b\x42\x05\x90\x9f\x44\x13\x4e\xc8\xe4\x8c\xa4\xf7\x41\x8a\x54\x05\x2d\xba\x18\xee\x05\xf9\xc2\x53\x51\x7d\xa8\xe2\x7e\xc2\xa7\x54\xd2\xde\xcb\xb6\x3d\xad\x67\xa2\x9a\x68\xf9\xfe\x42\x15\x7f\x71\x3a\x86\x34\xf7\x15\x55\xc5\x7d\x2e\x65\x41\x3a\xbb\xdf\x5a\x4b\x71\x42\xdb\x8d\x37\x43\x27\x17\x39\xd0\x4e\x96\xca\x77\x65\x5a\xad\x0e\x7f\x99\x0e\x3e\x35\xc4\x76\x2b\xf0\x04\x07\x73\xed\x7e\x04\x26\x1d\xf6\x11\xa9\x42\x2d\x20\x95\xc3\x15\x9a\xa1\xbc\x50\xe9\x13\xc4\x4f\xb0\x11\x36\xd7\x19\x87\x80\x3f\x3b\x99\x8c\x80\x35\x82\xd5\xc5\x89\x43\x72\x14\x8d\x54\x50\x9e\x56\x3f\x51\x4d\x34\xd9\x3d\x29\x0c\x93\x8f\x70\x14\xd2\x8f\x10\x97\x39\x10\x72\xad\xb3\x96\x02\x84\x59\xf9\x0e\xd5\x59\xe7\x42\x64\x50\x24\x06\xa3\x9a\xad\x42\x52\x51\x80\x2d\x49\xce\xa4\x86\xa3\x98\xd3\xeb\x5c\xcd\xee\xe9\x3a\x71\xaf\x34\x5a\xe5\x0a\x06\x34\x3b\x27\x50\x5e\x77\x12\x90\x2f\x9c\x98\x76\x8f\x1d\x49\x2a\xac\xe7\xfb\x82\xda\xb7\xa1\x5a\x0b\x65\xd5\x30\xda\x6e\x99\xae\x1a\x17\xd8\x93\xd3\x86\x20\xf8\x99\xa8\x31\x93\x4e\x4c\x49\x5f\x0e\xe2\xc5\xdd\xf2\xe3\xf7\x00\x8b\x5c\x32\xfc\xbe\x48\xb1\xd0\xaa\xdd\x3e\x0e\x07\x48\x0e\xb7\xa0\xa6\x92\xf7\x6b\x41\x7c\xd8\x05\xa0\xe3\x05\x9f\x89\x3e\x95\xef\x42\xaf\xfc\x0c\x9b\x24\xd2\xa9\xea\xcb\x6f\xa8\x74\x94\xef\x96\x68\x38\x59\xc5\x44\x15\x7a\xf7\x5a\x41\x25\xed\xfd\x13\x6b\x1d\xaa\x93\xe3\xc6\xc6\x5d\xd0\x21\x09\x0e\xe5\x32\x5f\x12\x84\x7b\x83\x2a\xa9\x9b\xa7\x8e\x74\x74\x6e\xf2\xcf\xa4\x53\x1d\xf9\xee\x70\xea\x7f\x7a\x89\x73\x58\x7b\x4f\x4b\xf3\xb9\x11\x92\xd5\xb5\xd3\xee\xdd\xeb\x82\x3c\xe2\x94\x7d\xeb\x8d\x68\xf3\x3b\x8a\x13\xba\x3f\xdc\x92\x66\x86\xbd\xf0\xf6\x8c\x7c\xcf\x64\x97\x6a\xf0\x57\xc1\x9d\x80\xdd\xd7\x20\xe7\x64\x6e\x9e\x91\xe3\xf7\x7d\xec\x51\x35\x18\x59\x49\x0b\xa2\x35\x28\xaa\x6d\x58\x7e\x75\x0d\xa1\xb5\x7b\x6e\x13\x3e\x6f\x7c\xb7\x4f\x44\xa8\x3e\x0c\x4f\xd7\xcc\x73\xd3\xfd\xc8\x69\x7d\x25\xca\x89\x1f\x1a\x5c\x5d\x18\xc5\x9f\x23\xab\xe1\xa4\x0c\x77\x33\xe9\xd1\xc8\x29\x7d\x46\x55\x15\xc3\xe5\x4e\xd6\x6c\x78\x20\x17\x55\x39\xb9\xfc\x99\x0a\x18\xeb\x80\x75\x97\x01\xe7\x23\x93\xa3\xe6\x5a\x2d\xce\xc8\x7e\x81\x6e\xaa\xb5\x8b\x75\x46\x6c\x62\x49\x99\x6e\x37\xf8\xdc\xe1\xe7\x06\xa7\x54\x16\x56\x31\x94\x7f\x13\x0e\x43\x01\xb8\x73\x38\xa7\x79\xc3\xae\x2d\x9e\x51\x5e\x33\xd9\x01\x4f\xb9\x78\xd3\x16\x63\xbe\x0a\x27\xe8\x72\x1b\x2e\x08\xb8\x74\x69\xdb\x74\xae\xf2\x6d\xed\x29\x15\x30\x6d\x11\x36\xb0\x1f\x23\x3c\x3a\x4d\x25\x06\xad\x3f\xa7\x8e\x0b\x74\x97\x26\x93\xcf\x3c\xeb\xe2\x6c\x72\x41\x2a\x09\x45\xde\x53\x72\x49\xd8\xd1\x34\x99\xc4\xf1\x23\xd9\xc4\xa2\x4b\x4f\x56\x4f\xea\x6c\xa0\x9d\x76\xf0\x8e\x8c\xdb\x4b\xe1\xc2\x97\xe4\x3d\xe9\xe9\x6d\x25\x2d\xbf\x01\xad\x22\xe4\xd1\xb9\x64\xfe\x4f\x9b\x5f\x90\x71\xb3\x94\x87\xcf\xea\x2e\x10\x46\x0b\xb7\x56\x43\x74\x05\x69\xe3\x87\xb2\xc7\xc2\x8b\xe7\xed\x03\xf1\xc8\x95\x60\xf6\xea\x09\x5c\xe3\xbc\x74\x1d\x50\xeb\xb6\xd5\x1b\xae\x9f\x9e\xdb\x64\xa9\xf0\x2e\xf2\x0c\x33\x05\xc2\xa9\x2d\x1a\x5f\x1f\x18\xbc\x34\xc0\x85\xaa\x74\x27\xff\x1d\x8b\xa6\x6f\x83\x22\x4a\xbb\x02\x95\xf6\xab\xe6\xb1\xdb\x6c\x07\x81\xe6\x50\x10\x8c\x6f\x7c\x45\xd2\xd1\x9e\x71\xe2\x68\xb2\x4a\x08\x84\x30\x7b\xb0\x46\xa4\xc9\x71\x71\x56\x97\xf6\x60\x83\xf6\x60\x7f\xf6\x51\x88\xd2\x0a\x7e\x09\x0d\x6b\x1d\x2e\x02\x89\xed\x13\x9a\xb4\xe9\x90\x25\x36\xd5\xf8\xc2\x2d\x94\x70\x29\xc7\xf0\xe7\x91\x18\x2a\x44\xf6\xf8\xd3\x3f\x26\x9b\x64\x93\xfd\xc9\xc7\xd7\xc8\x5a\xf4\xcb\x4e\x3a\x87\xa6\x98\x70\xbb\x0e\x07\x74\x22\x08\x1d\x8c\xb4\x94\xeb\xa9\xac\x39\x7c\xb9\x97\x7d\xcf\xb5\xc1\xd0\xb5\x1d\x9b\xeb\xfc\x56\xf2\xa3\x5d\xe4\xc3\x4d\xe4\x6f\xb3\xdf\xff\x53\x27\xf9\xe9\x0e\x71\x84\xe1\xa5\x3e\x71\x84\xcd\x13\xdc\x22\x71\xba\xd8\x33\x9c\x5e\xad\x5a\x6c\xb5\x3e\x23\x9c\x07\xda\x89\x57\xb8\x51\x87\x6e\xd7\xfa\x5f\x79\x92\x85\x4d\x83\x7c\xae\x6b\xc3\xc6\x71\x9a\x9f\x87\xa7\x8c\xbe\xf3\xa0\x7c\xc8\x5e\xfc\x17\x1c\xe1\x51\xb9\xe4\xab\xd8\xa9\xe7\xed\xe4\xe2\x23\xb7\x33\xbc\x84\xaa\xd0\x75\xbd\x80\xd9\x47\xad\x59\x19\x39\xb7\xc5\xcf\xa0\xeb\x7a\xbf\x57\x97\x26\xaa\x47\xe7\xa9\x5d\x65\x9e\x7d\x12\xed\x90\x4f\x55\x9a\xbf\x1e\xfa\x74\x78\xfc\xe2\xe3\x2a\x59\x27\x3f\x6e\x4d\x7f\xf8\x91\xff\x34\x41\xab\xef\x76\x15\x73\x8e\x8e\xef\x32\xbb\x81\xd1\xa5\xfa\x3e\x8f\x47\xd6\xfd\x1a\x8d\xe5\xbf\x29\x38\xa5\xf5\x48\x38\x51\xde\xfa\x5b\x9a\x0f\x29\xa2\x23\xf3\x9d\xf7\xde\xa7\x54\x97\x56\x3e\x3c\xf3\x1f\x86\x72\xe0\xa7\x5d\xc6\x67\x96\x27\x37\xc9\x74\xd3\x3d\xea\x8b\x3b\xe9\x6f\x19\x7a\x85\x5d\xc6\x67\x97\xb2\x06\xa1\x72\x9b\x97\xd2\x6d\xea\xa3\x5e\x83\x3e\xa4\x94\x30\x8d\xef\x4e\x36\xf2\x8c\xdb\x98\x5e\x18\x3b\xbe\x80\xa1\x14\x6f\xf0\x5f\x1e\x2d\xe5\xb5\xc8\x6e\xe7\x51\x07\xcd\x98\x3e\x69\xf1\xae\xd0\x75\x61\x68\x03\x99\xd7\xdf\x79\xb6\xcd\xad\xe4\xf4\x1c\x97\xf7\x27\x5a\x8f\xe9\xb6\xbf\x0e\xef\x52\x54\x35\xfe\xbd\x8f\x6b\x63\x47\x33\x9a\x65\xf7\x30\x4a\xda\xb2\x8f\x30\x08\x34\x23\x5c\xbc\x7b\x74\x64\xdc\x3b\x28\x3f\xb6\x93\x07\x76\xff\x17\x00\x00\xff\xff\xca\xab\x6c\x89\xce\x38\x00\x00")

func configYamlBytes() ([]byte, error) {
	return bindataRead(
		_configYaml,
		"config.yaml",
	)
}

func configYaml() (*asset, error) {
	bytes, err := configYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config.yaml", size: 14542, mode: os.FileMode(420), modTime: time.Unix(1529901498, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"config.yaml": configYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"config.yaml": &bintree{configYaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

